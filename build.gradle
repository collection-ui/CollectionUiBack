plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.epages.restdocs-api-spec' version '0.19.4'
}

group = 'com'
version = '0.0.1-DEV'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-core'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.projectlombok:lombok'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.19.4'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

def isProd = project.hasProperty('prod')

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
    onlyIf { !isProd }
}

tasks.register('copyApiDocument', Copy) {
    dependsOn asciidoctor
    doFirst {
        delete file("src/main/resources/static/docs")
    }
    from asciidoctor.outputDir
    into file("src/main/resources/static/docs")
    onlyIf { !isProd }
}

openapi3 {
    server = 'https://localhost:8080'
    title = 'CollectionUI'
    description = 'CollectionUI API'
    version = '0.0.1'
    format = 'yaml'
}

tasks.register('copyOasToSwagger', Copy) {
    dependsOn 'openapi3'
    doFirst {
        delete file("src/main/resources/static/swagger/openapi3.yaml")
    }
    from project.layout.buildDirectory.file('api-spec/openapi3.yaml')
    into file("src/main/resources/static/swagger")
    onlyIf { !isProd }
}

build {
    dependsOn copyApiDocument, copyOasToSwagger
}
